{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\g2002\\\\OneDrive\\\\Documentos\\\\lab-des-soft\\\\myapp\\\\src\\\\components\\\\TodoWrapper.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { TodoForm } from \"./TodoForm\";\nimport { TodoList } from \"./TodoList\";\nimport { listarTasks, adicionarTask, editarTask, deletarTaskPorId } from '../service/TaskService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoWrapper = () => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [error, setError] = useState(null); // Estado para armazenar a mensagem de erro\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const data = await listarTasks();\n        setTodos(data);\n        setError(null); // Limpar o erro se a chamada for bem-sucedida\n      } catch (error) {\n        console.error('Erro ao buscar tasks', error.response);\n        setError(error.response ? error.response.data : 'Erro ao buscar tasks'); // Definir a mensagem de erro específica\n      }\n    };\n    fetchTasks();\n  }, []);\n  const addTodo = async description => {\n    const newTask = {\n      descricao: description,\n      completa: false,\n      prazo: '2024-12-31',\n      priority: 'LOW'\n    };\n    try {\n      await adicionarTask(newTask);\n      const data = await listarTasks();\n      setTodos(data);\n      setError(null); // Limpar o erro se a chamada for bem-sucedida\n    } catch (error) {\n      console.error('Erro ao adicionar task', error);\n      setError(error.response ? error.response.data : 'Erro ao adicionar task'); // Definir a mensagem de erro específica\n    }\n  };\n  const deleteTodo = async id => {\n    try {\n      await deletarTaskPorId(id);\n      const data = await listarTasks();\n      setTodos(data);\n      setError(null); // Limpar o erro se a chamada for bem-sucedida\n    } catch (error) {\n      console.error('Erro ao deletar task', error);\n      setError(error.response ? error.response.data : 'Erro ao deletar task'); // Definir a mensagem de erro específica\n    }\n  };\n  const toggleComplete = async id => {\n    const taskToToggle = todos.find(todo => todo.id === id);\n    const updatedTask = {\n      ...taskToToggle,\n      completed: !taskToToggle.completed\n    };\n    try {\n      await editarTask(id, updatedTask);\n      const data = await listarTasks();\n      setTodos(data);\n      setError(null); // Limpar o erro se a chamada for bem-sucedida\n    } catch (error) {\n      console.error('Erro ao editar task', error);\n      setError(error.response ? error.response.data : 'Erro ao editar task'); // Definir a mensagem de erro específica\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TodoWrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lista de Tarefas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this), \" \", /*#__PURE__*/_jsxDEV(TodoForm, {\n      addTodo: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), todos.map(todo => /*#__PURE__*/_jsxDEV(TodoList, {\n      task: todo,\n      deleteTodo: deleteTodo,\n      toggleComplete: toggleComplete\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoWrapper, \"dt52EhpTEzDvogNYoxRHpnHq6TY=\");\n_c = TodoWrapper;\nexport default TodoWrapper;\nvar _c;\n$RefreshReg$(_c, \"TodoWrapper\");","map":{"version":3,"names":["React","useState","useEffect","TodoForm","TodoList","listarTasks","adicionarTask","editarTask","deletarTaskPorId","jsxDEV","_jsxDEV","TodoWrapper","_s","todos","setTodos","error","setError","fetchTasks","data","console","response","addTodo","description","newTask","descricao","completa","prazo","priority","deleteTodo","id","toggleComplete","taskToToggle","find","todo","updatedTask","completed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","task","_c","$RefreshReg$"],"sources":["C:/Users/g2002/OneDrive/Documentos/lab-des-soft/myapp/src/components/TodoWrapper.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { TodoForm } from \"./TodoForm\";\r\nimport { TodoList } from \"./TodoList\";\r\nimport { listarTasks, adicionarTask, editarTask, deletarTaskPorId } from '../service/TaskService';\r\n\r\nexport const TodoWrapper = () => {\r\n  const [todos, setTodos] = useState([]);\r\n  const [error, setError] = useState(null); // Estado para armazenar a mensagem de erro\r\n\r\n  useEffect(() => {\r\n    const fetchTasks = async () => {\r\n      try {\r\n        const data = await listarTasks();\r\n        setTodos(data);\r\n        setError(null); // Limpar o erro se a chamada for bem-sucedida\r\n      } catch (error) {\r\n        console.error('Erro ao buscar tasks',  error.response);\r\n        setError(error.response ? error.response.data : 'Erro ao buscar tasks'); // Definir a mensagem de erro específica\r\n      }\r\n    };\r\n\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  const addTodo = async (description) => {\r\n    const newTask = {\r\n      descricao: description,\r\n      completa: false,\r\n      prazo: '2024-12-31',\r\n      priority: 'LOW'\r\n    };\r\n\r\n    try {\r\n      await adicionarTask(newTask);\r\n      const data = await listarTasks();\r\n      setTodos(data);\r\n      setError(null); // Limpar o erro se a chamada for bem-sucedida\r\n    } catch (error) {\r\n      console.error('Erro ao adicionar task', error);\r\n      setError(error.response ? error.response.data : 'Erro ao adicionar task'); // Definir a mensagem de erro específica\r\n    }\r\n  };\r\n\r\n  const deleteTodo = async (id) => {\r\n    try {\r\n      await deletarTaskPorId(id);\r\n      const data = await listarTasks();\r\n      setTodos(data);\r\n      setError(null); // Limpar o erro se a chamada for bem-sucedida\r\n    } catch (error) {\r\n      console.error('Erro ao deletar task', error);\r\n      setError(error.response ? error.response.data : 'Erro ao deletar task'); // Definir a mensagem de erro específica\r\n    }\r\n  };\r\n\r\n  const toggleComplete = async (id) => {\r\n    const taskToToggle = todos.find((todo) => todo.id === id);\r\n    const updatedTask = {\r\n      ...taskToToggle,\r\n      completed: !taskToToggle.completed\r\n    };\r\n    try {\r\n      await editarTask(id, updatedTask);\r\n      const data = await listarTasks();\r\n      setTodos(data);\r\n      setError(null); // Limpar o erro se a chamada for bem-sucedida\r\n    } catch (error) {\r\n      console.error('Erro ao editar task', error);\r\n      setError(error.response ? error.response.data : 'Erro ao editar task'); // Definir a mensagem de erro específica\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"TodoWrapper\">\r\n      <h1>Lista de Tarefas</h1>\r\n      {error && <div className=\"error\">{error}</div>} {/* Exibir a mensagem de erro */}\r\n      <TodoForm addTodo={addTodo} />\r\n      {todos.map((todo) => (\r\n        <TodoList key={todo.id} task={todo} deleteTodo={deleteTodo} toggleComplete={toggleComplete} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoWrapper;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}